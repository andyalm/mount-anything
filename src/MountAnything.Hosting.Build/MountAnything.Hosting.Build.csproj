<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <LangVersion>Latest</LangVersion>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <PackageVersion Condition="$(PackageReleaseTag) != ''">$(PackageReleaseTag.Substring(1))</PackageVersion>
    <PackageVersion Condition="$(PackageVersion)==''">0.0.1-dev</PackageVersion>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/andyalm/mount-anything</RepositoryUrl>
    <Authors>Andy Alm</Authors>
    <PackageTags>powershell;mount;drive;psdrive;</PackageTags>
    <Copyright>2022 Andy Alm</Copyright>
    <Title>Mount Anything Build</Title>
    <Description>A framework for building powershell providers to make it easy to navigate arbitrary API's as a hierarchical virtual filesystem of objects. The MountAnything.Build package should be installed in the package that will contain the generated powershell provider.</Description>
  </PropertyGroup>
  
  <ItemGroup Label="dotnet pack instructions">
    <Content Include="build\*.props;build\*.targets;build\*.ps1">
      <Pack>true</Pack>
      <PackagePath>build\</PackagePath>
    </Content>
    <Content Include="$(OutputPath)\$(AssemblyName).dll">
      <Pack>true</Pack>
      <PackagePath>build\</PackagePath>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="17.1.0" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.1.0" />
  </ItemGroup>
  
  <ItemGroup>
    <EmbeddedResource Include="..\MountAnything.Hosting.Templates\Provider.cs" Link="templates\Provider.cs" />
    <EmbeddedResource Include="..\MountAnything.Hosting.Templates\ProviderAssemblyContext.cs" Link="templates\ProviderAssemblyContext.cs" />
    <Compile Remove="templates\*.cs" />
    <EmbeddedResource Include="templates\Host.csproj" />
  </ItemGroup>
  
  <!-- This is here to facilitate running from a ProjectReference. Is not necessary for generating the package -->
  <Target Name="CopyOutputToBuildFolder" AfterTargets="Build">
    <ItemGroup>
      <TasksAssembly Include="$(OutputPath)\$(AssemblyName).dll" />
      <TasksAssembly Include="$(OutputPath)\$(AssemblyName).pdb" />
    </ItemGroup>
    <Copy SourceFiles="@(TasksAssembly)" DestinationFolder="build" />
  </Target>

</Project>
